// Generated by CoffeeScript 1.7.1
(function() {
  define(['knockout'], function(ko) {
    var projectId, viewModel;
    projectId = 0;
    viewModel = {
      cache: null,
      editable: {
        Id: ko.observable(0),
        Name: ko.observable(''),
        ProjectId: ko.observable(projectId),
        Status: ko.observable(0)
      },
      tasks: ko.observableArray(),
      remove: function(task) {
        $.ajax({
          url: 'index.php/task/delete/' + task.Id,
          type: 'post',
          success: function(result) {
            if (!result) {
              return;
            }
            viewModel.tasks.remove(task);
          }
        });
      },
      add: function() {
        var task;
        if (!viewModel.editable.Id() && !viewModel.editable.Name()) {
          return;
        }
        viewModel.tasks.remove(viewModel.cache);
        task = {
          Id: viewModel.editable.Id(),
          Name: viewModel.editable.Name(),
          ProjectId: projectId,
          Status: viewModel.editable.Status()
        };
        $.ajax({
          url: viewModel.cache != null ? 'index.php/task/update/' + task.Id : 'index.php/task/create',
          type: 'post',
          data: {
            Task: task
          },
          success: function(result) {
            if (!result) {
              return;
            }
            viewModel.tasks.push(task);
          }
        });
        $('#name').val('').focus();
        viewModel.editable.Name(null);
        viewModel.editable.Id(null);
        viewModel.cache = null;
      },
      edit: function(task) {
        viewModel.cache = task;
        viewModel.editable.Id(task.Id);
        viewModel.editable.Name(task.Name);
        viewModel.editable.Status(task.Status);
      },
      activate: function(id) {
        projectId = id;
        $.ajax({
          url: 'index.php/task/index/' + id,
          type: 'get',
          mimeType: "application/json",
          dataType: "json",
          success: function(data) {
            viewModel.tasks(data);
          }
        });
      }
    };
    return viewModel;
  });

}).call(this);
